<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments>Add single record</comments>
        <condition>gs.hasRole('x_illu2_illumio.illumio_user') &amp;&amp; current.known_to_pce == "unknown" &amp;&amp; current.duplicate==false</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Sync to PCE</name>
        <onclick>doSyncWithPCEAdd()</onclick>
        <order>100</order>
        <script><![CDATA[function doSyncWithPCEAdd() {
    try {
        var dialog;
        var gaCustomTableData,
            checkedRecordsData = {},
            answer,
            interfaces,
            sys_id = [],
            configSysId = [],
            selectedRecordObject = {},
            totalRecordsToSync,
            instanceURL;
        var userName = g_user.firstName + " " + g_user.lastName;
        sys_id = g_form.getUniqueValue();
        configSysId = g_form.getValue('illumio_pce_configuration');
        selectedRecordObject[configSysId] = [sys_id];

        var loadingDialog = new GlideModal();
        loadingDialog.setTitle("Starting sync process");
        loadingDialog.setWidth(400);
        loadingDialog.renderWithContent(
            '<html><body><div class="row loading-container" id="loadingDialog"><label style="font-size: medium;">Validating Sync process...</label><br /><div class="loading-indicator icon-loading icon-lg"></div></div></html>'
        );
        interfaces = g_form.getValue('interfaces');
        var snowIP = interfaces['umw0'] ? interfaces['umw0']['cmdb_value'].trim() : "";
        if (snowIP == "" && interfaces == "") {
            dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
            dialog.setTitle("Cannot sync empty IP Address on PCE.");
            dialog.render();
            return;
        }
        gaCustomTableData = new GlideAjax("IllumioGetCustomTableRecord");
        gaCustomTableData.addParam("sysparm_name", "getData");
        gaCustomTableData.addParam("sysparm_checked_records_object", JSON.stringify(selectedRecordObject));
        gaCustomTableData.getXML(gaParseTableResponse);

        // Callback function for AJAX call to IllumioGetCustomTableRecord         
        function gaParseTableResponse(response) {
            answer = response.responseXML.documentElement.getAttribute("answer");
            answer = JSON.parse(answer);
            checkedRecordsData = answer.data.filteredRecords;
            totalRecordsToSync = answer.data.totalRecords;
            instanceURL = answer.instanceURL;

            if (answer.data.limitExceeded) {
                loadingDialog.destroy();
                dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                dialog.setTitle("Workload creation or label creation limit has exceeded.");
                dialog.render();
                return false;
            }
            preparePayloadForWorkload();
        }

        function preparePayloadForWorkload() {
            loadingDialog.destroy();

            if (totalRecordsToSync == 0) {
                dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                dialog.setTitle("No valid workload is selected. Please select the workload which is not marked as duplicate and have conflicts.");
                dialog.render();
                return false;
            }

            gaParseLabelsResponse(checkedRecordsData[configSysId][0]);

            /**
             * Fetch the label details and send the workload object to server script
             */
            function gaParseLabelsResponse(workloadObject) {
                var jobSysId;
                workloadObject["description"] =
                    "Created by " +
                    userName +
                    " [" + instanceURL + "] at " +
                    new Date().toLocaleString();

                var managedWorkload = [workloadObject];

                // Create scheduled job for adding unknown workload to PCE
                var createJob = new GlideAjax("IllumioManageJobs");
                createJob.addParam("sysparm_name", "createScheduledJob");
                createJob.addParam("sysparm_job_status", "running");
                createJob.addParam("sysparm_type_flag", "false");
                createJob.addParam(
                    "sysparm_current_operation",
                    "Creating " + workloadObject.hostname + " workload on PCE"
                );
                createJob.addParam(
                    "sysparm_logs",
                    "Creating " + workloadObject.hostname + " workload on PCE"
                );
                createJob.addParam("sysparm_job_type", "data sync");
                createJob.addParam("sysparm_config_sys_id", g_form.getValue("illumio_pce_configuration"));
                createJob.getXML(gaGetJobSysID);

                function gaGetJobSysID(response1) {
                    jobSysId = response1.responseXML.documentElement.getAttribute("answer");

                    // Check if sceduled job is created or not
                    if (jobSysId == null) {
                        dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                        dialog.setTitle(
                            "Can not start data sync process as there is another job in running state."
                        );
                        dialog.render();
                    } else {
                        // Make the AJAX call to the server script that will push the job to ECC queue
                        var ga_update;
                        ga_update = new GlideAjax("IllumioUpdatePCE");
                        ga_update.addParam("sysparm_name", "action");
                        ga_update.addParam("sysparm_operation", "create");
                        ga_update.addParam("sysparm_custom_record_sys_id", g_form.getUniqueValue());
                        ga_update.addParam("sysparm_jobSysId", jobSysId);
                        ga_update.addParam("sysparm_payload", JSON.stringify(managedWorkload));
                        ga_update.addParam("sysparm_config_sys_id", g_form.getValue("illumio_pce_configuration"));
                        ga_update.getXML();
                        dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                        dialog.setTitle("Sync process started.");
                        dialog.render();
                    }
                }
            }
        }
    } catch (ex) {
        gs.error("[Sync to PCE]Exception in Sync to PCE:" + ex);
    }
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-08-22 12:17:56</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e95c224edbcc6700dc9fabc5ca96194d</sys_id>
        <sys_mod_count>137</sys_mod_count>
        <sys_name>Sync to PCE</sys_name>
        <sys_overrides/>
        <sys_package display_value="Illumio" source="x_illu2_illumio">15314f1ddb882700dc9fabc5ca961943</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Illumio">15314f1ddb882700dc9fabc5ca961943</sys_scope>
        <sys_update_name>sys_ui_action_e95c224edbcc6700dc9fabc5ca96194d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-20 18:32:30</sys_updated_on>
        <table>x_illu2_illumio_illumio_pce_workload</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>e95c224edbcc6700dc9fabc5ca96194d</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-20 18:32:29</sys_created_on>
        <sys_id>c85ebbe4db4e1e502fcecafc13961944</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-20 18:32:29</sys_updated_on>
        <table>sys_ui_action</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
