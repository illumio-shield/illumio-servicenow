<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments>Update Single record</comments>
        <condition>!current.duplicate &amp;&amp; ((current.known_to_pce != "unknown" &amp;&amp; current.conflicts &amp;&amp; !current.deleted_from_pce ))</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Sync Server to PCE</name>
        <onclick>doSyncWithPCE()</onclick>
        <order>100</order>
        <script><![CDATA[function doSyncWithPCE() {
    var gaCustomTableData, dialog,checkedRecordsObject = {}, checkedRecordsData={}, answer, sys_id, totalRecordsToSync, count = 0,configSysId=[],selectedRecordObject = {}, instanceURL;
    var userName = g_user.firstName + " " + g_user.lastName;
    sys_id = g_form.getUniqueValue();
    configSysId = g_form.getValue('illumio_pce_configuration');
    selectedRecordObject[configSysId] = [sys_id];

    var loadingDialog = new GlideModal();
    loadingDialog.setTitle("Starting sync process");
    loadingDialog.setWidth(400);
    loadingDialog.renderWithContent(
        '<html><body><div class="row loading-container" id="loadingDialog"><label style="font-size: medium;">Validating Sync process...</label><br /><div class="loading-indicator icon-loading icon-lg"></div></div></html>'
    );
        gaCustomTableData = new GlideAjax("GetLabelGroupsAjax");
        gaCustomTableData.addParam("sysparm_name", "fetchCriticalLabels");
        gaCustomTableData.addParam("sysparm_config_sys_ids",JSON.stringify([configSysId]) ); 
        gaCustomTableData.getXML(gaParseResponse);
    function gaParseResponse(response) {
        answer = response.responseXML.documentElement.getAttribute("answer");
            var responseDict = JSON.parse(answer); 
            if (!responseDict.status) { 
                var message = "Cannot start data sync process as MID Server is either down or not responding for PCE Configuration(s) - " + responseDict["failedConfigurations"].join(", ");
                loadingDialog.destroy();
                dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                dialog.setTitle(message);
                dialog.render();
                return;
            }
            excludeWorkloads();
    }

    function excludeWorkloads() {

        gaCustomTableData = new GlideAjax("GetLabelGroupsAjax");
        gaCustomTableData.addParam("sysparm_name", "excludeWorkloadsWithCriticalLabels");

        gaCustomTableData.addParam("sysparm_selected_record_object", JSON.stringify(selectedRecordObject));
        gaCustomTableData.getXML(gaParseLResponse);

        /**
         * Callback function for AJAX call to IllumioGetCustomTableRecord
         */
        function gaParseLResponse(response) {
            answer = response.responseXML.documentElement.getAttribute("answer");

            answer = JSON.parse(answer);
            totalRecordsToSync = answer.totalRecords;
            checkedRecordsObject =  answer.filteredRecords;
            getLabelGroupsCount();
        }
    }

    function getLabelGroupsCount() {
        gaCustomTableData = new GlideAjax('GetLabelGroupsAjax');
        gaCustomTableData.addParam('sysparm_name', 'countCriticalGroupsFetched');
        gaCustomTableData.addParam("sysparm_config_sys_ids",JSON.stringify([configSysId]) );
        gaCustomTableData.getXML(gaParseLCResponse);

        function gaParseLCResponse(response) {
            answer = response.responseXML.documentElement.getAttribute("answer");
            answer = JSON.parse(answer);
            count = answer[configSysId];
            getCustomtableRecord();
        }
    }

    function getCustomtableRecord() {
        loadingDialog.destroy();
        if (totalRecordsToSync == 0) {
            dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
            dialog.setTitle("Cannot sync a workload that has a critical label.");
            dialog.render();
            return;
        }
        gaCustomTableData = new GlideAjax("IllumioGetCustomTableRecord");
        gaCustomTableData.addParam("sysparm_name", "getData");
        gaCustomTableData.addParam("sysparm_checked_records_object", JSON.stringify(checkedRecordsObject));
        gaCustomTableData.getXML(gaParseTableResponse);

        // Callback function for AJAX call to IllumioGetCustomTableRecord         
        function gaParseTableResponse(response) {
            answer = response.responseXML.documentElement.getAttribute("answer");
            answer = JSON.parse(answer);
            checkedRecordsData = answer.data.filteredRecords;
            totalRecordsToSync = answer.data.totalRecords;
            instanceURL = answer.instanceURL;

            if (answer.data.limitExceeded) {
                dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                dialog.setTitle("Workload modification or label creation limit has exceeded.");
                dialog.render();
                return false;
            }

            preparePayloadForWorkload();
        }

            function preparePayloadForWorkload() {
                if (totalRecordsToSync == 0) {
                    dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                    dialog.setTitle("No valid workload selected.");
                    dialog.render();
                    return false;
                }

            gaParseLabelsResponse(checkedRecordsData[configSysId][0]);
            /**
             * Callback function for response from IllumioPrepareWorkload
             */
            function gaParseLabelsResponse(workloadObject) {
                var jobSysId;

                workloadObject["href"] = workloadObject.pce_workload_href;
                // Add the description in the workload payload
                workloadObject["description"] =
                    "Updated by " +
                    userName +
                    " [" + instanceURL + "] at " +
                    new Date().toLocaleString();
                var managedWorkload = [workloadObject];

                // Create scheduled job for adding unknown workload to PCE
                var createJob = new GlideAjax("IllumioManageJobs");
                createJob.addParam("sysparm_name", "createScheduledJob");
                createJob.addParam("sysparm_config_sys_id", configSysId);
                createJob.addParam("sysparm_job_status", "running");
                createJob.addParam("sysparm_type_flag", "true");
                createJob.addParam(
                    "sysparm_current_operation",
                    "Updating " + workloadObject.hostname + " workload on PCE"
                );
                createJob.addParam(
                    "sysparm_logs",
                    "Updating " + workloadObject.hostname + " workload on PCE"
                );

                createJob.addParam("sysparm_job_type", "data sync");
                createJob.addParam("sysparm_count", count + "");
                createJob.getXML(gaGetJobSysID);

                function gaGetJobSysID(response1) {
                    jobSysId = response1.responseXML.documentElement.getAttribute("answer");

                    // Check if sceduled job is created or not
                    if (jobSysId == null) {
                        dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                        dialog.setTitle(
                            "Can not start data sync process as there is data collection in running state."
                        );
                        dialog.render();
                    } else {
                        // Make the AJAX call to script which eventually will call the MID server script
                        var ga_update;
                        ga_update = new GlideAjax("IllumioUpdatePCE");
                        ga_update.addParam("sysparm_name", "action");
                        ga_update.addParam("sysparm_operation", "update");
                        ga_update.addParam("sysparm_config_sys_id", configSysId);
                        ga_update.addParam("sysparm_custom_record_sys_id", g_form.getUniqueValue());
                        ga_update.addParam("sysparm_jobSysId", jobSysId);
                        ga_update.addParam("sysparm_count", count);
                        ga_update.addParam("sysparm_partial", "false");
                        ga_update.addParam("sysparm_payload", JSON.stringify(managedWorkload));
                        ga_update.getXML();

                        dialog = new GlideDialogWindow("x_illu2_illumio_IllumioInfoPopup");
                        dialog.setTitle("Sync process started.");
                        dialog.render();
                    }
                }
            }
        }
    }
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-08-22 12:16:31</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>27cb224edbcc6700dc9fabc5ca961949</sys_id>
        <sys_mod_count>253</sys_mod_count>
        <sys_name>Sync Server to PCE</sys_name>
        <sys_overrides/>
        <sys_package display_value="Illumio" source="x_illu2_illumio">15314f1ddb882700dc9fabc5ca961943</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Illumio">15314f1ddb882700dc9fabc5ca961943</sys_scope>
        <sys_update_name>sys_ui_action_27cb224edbcc6700dc9fabc5ca961949</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-11 13:46:46</sys_updated_on>
        <table>x_illu2_illumio_illumio_pce_workload</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
</record_update>
