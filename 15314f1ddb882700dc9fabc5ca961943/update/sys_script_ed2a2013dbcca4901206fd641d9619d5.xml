<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_illu2_illumio_illumio_label_group_mapping</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Fetch Labels From LabelGroups</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var pceConfig = new GlideRecord('x_illu2_illumio_illumio_pce_conf');
	pceConfig.query();
	if (pceConfig.next()) {
		var fetchLabels = new sn_ws.RESTMessageV2('IllumioFetchLabelFromLabelGroups', 'GetLabels');
		var pce_authorization = gs.base64Encode(pceConfig.username.getDecryptedValue() + ':' + pceConfig.secret_key.getDecryptedValue());
		
		fetchLabels.setRequestHeader('Authorization', 'Basic '+ pce_authorization);

		fetchLabels.setStringParameter('url', pceConfig.pce_url + '');
	
		fetchLabels.setStringParameter('href', current.getValue("href") + '');

		fetchLabels.setMIDServer(pceConfig.mid_server.name + '');

		fetchLabels.setEccParameter('skip_sensor', 'true');

	}
	try {
		//Execute REST message
		var response = fetchLabels.execute();
		var response_status = response.getStatusCode();

		//If Success, get token and throw an error otherwise
		if (response_status == 200 || response_status == 201) {
			response = JSON.parse(response.getBody());
			
			var grLabel = new GlideRecord('x_illu2_illumio_illumio_pce_labels_mapping');
			var grMember = new GlideRecord('x_illu2_illumio_label_group_member');
			
			for(var i = 0; i < response.labels.length; i++){
				var label = response.labels[i].href;
				grLabel.get('href', label);
				grMember.initialize();
				
				grMember.illumio_label_group = current.sys_id;
				grMember.insert();
			}

		}
			
	} catch (ex) {
		gs.error('[Illumio]Exception: '+ ex);

	}
	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-29 08:48:35</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ed2a2013dbcca4901206fd641d9619d5</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Fetch Labels From LabelGroups</sys_name>
        <sys_overrides/>
        <sys_package display_value="Illumio" source="x_illu2_illumio">15314f1ddb882700dc9fabc5ca961943</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Illumio">15314f1ddb882700dc9fabc5ca961943</sys_scope>
        <sys_update_name>sys_script_ed2a2013dbcca4901206fd641d9619d5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-09 11:22:13</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ed2a2013dbcca4901206fd641d9619d5"/>
</record_update>
