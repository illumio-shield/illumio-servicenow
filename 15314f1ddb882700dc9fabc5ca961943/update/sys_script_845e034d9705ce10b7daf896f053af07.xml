<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_illu2_illumio_illumio_pce_workload_field_value</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_illu2_illumio_illumio_pce_workload_field_value">illumio_pce_workload.conflicts=false^illumio_pce_workload.duplicate=false^EQ<item endquery="false" field="illumio_pce_workload.conflicts" goto="false" newquery="false" operator="=" or="false" value="false"/>
            <item endquery="false" field="illumio_pce_workload.duplicate" goto="false" newquery="false" operator="=" or="false" value="false"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Illumio Set Conflict</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Add your code here
    var configSysId = current.illumio_pce_workload.illumio_pce_configuration + "";

    if (current.getValue("cmdb_value") != current.getValue("pce_value")) {
        var mappedField = new IllumioGetPCEConfiguration().getMappedFields(configSysId);

        if (mappedField[current.illumio_pce_workload.source_table + ""].indexOf(current.illumio_label_dimension.key + "") > -1) {
            var workloadGr = new GlideRecord("x_illu2_illumio_illumio_pce_workload");
            if (workloadGr.get(current.getValue("illumio_pce_workload"))) {
                workloadGr.setValue("conflicts", true);
                workloadGr.setWorkflow(false);
                workloadGr.update();
            }
        }
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-18 15:07:18</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>845e034d9705ce10b7daf896f053af07</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Illumio Set Conflict</sys_name>
        <sys_overrides/>
        <sys_package display_value="Illumio" source="x_illu2_illumio">15314f1ddb882700dc9fabc5ca961943</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Illumio">15314f1ddb882700dc9fabc5ca961943</sys_scope>
        <sys_update_name>sys_script_845e034d9705ce10b7daf896f053af07</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-09 11:24:31</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=845e034d9705ce10b7daf896f053af07"/>
</record_update>
